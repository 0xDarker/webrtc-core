#!/usr/bin/groovy

// Node label
// Find more info about these:
// https://engit.cisco.com/build/cloudbees-jenkins/documentation-central-jenkins-build-agents
def NODE_LABEL = 'docker'
def DOCKER_REGISTRY = '527856644868.dkr.ecr.us-east-2.amazonaws.com'
def DOCKER_REPO = 'cpaas'
def DOCKER_IMAGE = 'webrtc-core'
def DOCKER_TEST_IMAGE = 'webrtc-core-test'
def DOCKER_TAG  // Computed later
def AWS_CREDS_ID = 'ecr:us-east-2:cpaas-aws-creds' // this uses cpaas-aws-creds from Jenkins

def NPM_TOOL = {nodejs "Node v16"}
def SERVER_URL = 'https://engci-maven-master.cisco.com/artifactory/api/npm/webrtc-core-npm'
def CREDENTIALS = 'temp_access_id'

pipeline {
  agent any

  stages {
    stage ('Artifactory configuration') {
      steps {
        rtServer (
          id: "ARTIFACTORY_SERVER",
          url: SERVER_URL,
          credentialsId: CREDENTIALS
        )

        rtNpmResolver (
          id: "NPM_RESOLVER",
          serverId: "ARTIFACTORY_SERVER",
          repo: "npm-remote"
        )

        rtNpmDeployer (
          id: "NPM_DEPLOYER",
          serverId: "ARTIFACTORY_SERVER",
          repo: "npm-local"
        )
      }
    }

    stage ('Exec npm install') {
      steps {
        rtNpmInstall (
          tool: NPM_TOOL, // Tool name from Jenkins configuration
          path: "npm-example",
          resolverId: "NPM_RESOLVER"
        )
      }
    }

    stage ('Exec npm publish') {
      steps {
        rtNpmPublish (
          tool: NPM_TOOL, // Tool name from Jenkins configuration
          path: "npm-example",
          deployerId: "NPM_DEPLOYER"
        )
      }
    }

    stage ('Publish build info') {
      steps {
        rtPublishBuildInfo (
          serverId: "ARTIFACTORY_SERVER"
        )
      }
    }
  }
}
